*groff-viewer.txt*  Display Groff files in a document viewer.  

====================================================================
CONTENTS                                         *GroffViewerContents*

    1. Introduction ......... |GroffViewerIntroduction|
    2. Usage ................ |GroffViewerUsage|
    3. Configuration ........ |GroffViewerConfiguration|
    4. Licence .............. |GroffViewerLicence|
    5. Further reading ...... |GroffViewerFurtherReading|

====================================================================
Section 1: Introduction                      *GroffViewerIntroduction*

A vim file type plugin for displaying Groff files in a document 
viewer as determined by the system default or chosen by the user. 
The document viewer used should auto-reload and preferably support 
the postscript file format - examples are Zathura, Evince, Okular 
or Xreader.

====================================================================
Section 2: Usage                                    *GroffViewerUsage*

With a groff file open in the current buffer select:

`  <localleader>o` - Open groff file in selected document viewer
`  <localleader>p` - Hard copy print groff file
`  <localleader>wc` - Displays word and character count

Saving the file in the normal way, i.e. |:write|, will result in the 
groff preview updating in the document viewer, providing the selected 
viewer auto-reloads.

The groff options required are guessed by grog (see man 1 grog) which
will guess the macro to be used, and whether options such as `-t`, 
`-e`, etc are required depending on the content of the file.  To see
what options grog has guessed for the current buffer view |:messages|
where it will be listed beginning with `Ran:`.  Grog can be turned off
if required, see |GroffViewerConfiguration|.

The wordcount functionality displays in the |status-line| a count of 
printed words and characters that will be output by groff.  For 
instance the very minimal `-ms` macro document: 
>
  .PP
  Hello small-world?
<
Will show as `Words: 2, Characters: 17` in the status-line.  As the 
above example shows whitespace is not included in the 
character count.  

Wordcount does not utilise grog, rather the macro to be used is
determined by the file extension, for example the file `myfile.me`
will be processed using the `-me` macro package. For further
information on groff file extensions see man 5 groff_filenames.
Not using grog here ensures that any bibliography files are not
counted as part of the main body of text.

Unfortunately the mom macro does not support the wordcount
functionality, further detail is available at:
  
  https://savannah.gnu.org/bugs/?63581


====================================================================
Section 3: Configuration                    *GroffViewerConfiguration*

Setting postscript document viewer ~

The system default for opening postscript files according to 
xdg-open will be used as the default document viewer. The default 
xdg-open postscript application can be changed to, for example, 
Zathura by the following Linux terminal command:

`xdg-mime default org.pwmt.zathura.desktop application/postscript`

Alternatively if you do not wish to make a system wide change, then 
the plugin will ignore the xdg-open default if the following line is 
adding to the `.vimrc` / `init.vim`, with the variable as the postscript viewer:

`let groffviewer_default="zathura"`

or, for instance:

`let groffviewer_default="okular"`

Setting groff options ~

The command line options available to groff can be added via your 
`vim.rc` / `init.vim` e.g.:

`let groffviewer_options="-dpaper=a4 -P -l"`

Using a pdf-only document viewer ~

Using a document viewer that supports pdf but not postscript is 
possible by amending the groff options in your `vim.rc` / `init.vim` 
for pdf output. For example should you want to use Sioyek as a 
document viewer:

`let groffviewer_default="sioyek"`
`let groffviewer_options="-T pdf"`

A pdf document viewer that auto-reloads, as Sioyek does, should
however still be chosen otherwise the document will fail to update 
on write.

Disabling grog ~

Should you not wish to have grog guess your groff options then add 
the following line to your `vim.rc` / `init.vim`:

`let groffviewer_grog=v:false`

This will however mean that the macro (or other options) to be used
will have to be explicitly set.  For instance in the case of the `-me`
macro you would need to add:

`let groffviewer_options="-me"`

Setting the printer ~

The `<localleader>p` mapping uses the lp command to hard copy print; 
this assumes a default printer has been set.

====================================================================
Section 4: Licence                                *GroffViewerLicence*

Copyright 2024 PreciousChicken

Licensed under the Apache Licence, Version 2.0 (the "Licence");
you may not use this file except in compliance with the Licence.
You may obtain a copy of the Licence at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the Licence is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or 
implied.  See the Licence for the specific language governing 
permissions and limitations under the Licence.

====================================================================
Section 5: Further reading                 *GroffViewerFurtherReading*

Known issues, contributing guidelines, changelog, etc can be found at:

  https://preciouschicken.com/software/vim-groff-viewer/

 vim:tw=70:ts=2:ft=help
